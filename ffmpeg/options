#!/bin/bash

BUILD_DIR=build

function configure_commands()
{
  ./configure \
    --prefix=/usr \
    --enable-shared \
    --disable-static \
    --enable-gpl \
    --enable-version3 \
    --enable-nonfree \
    --enable-runtime-cpudetect \
    --enable-openssl \
    --enable-libspeex \
    --enable-libvorbis \
    --enable-libvpx \
    --enable-libx264 \
    --enable-x11grab
}

function make_commands()
{
  make
  # && gcc ../tools/qt-faststart.c -o qt-faststart
}

function test_commands()
{
  echo "no make check"
}

function install_commands()
{
  # cp qt-faststart /usr/bin &&
  make install &&
#  mkdir /usr/share/doc/ffmpeg-0.10.3 &&
#  cp ../doc/*.txt /usr/share/doc/ffmpeg-0.10.3 &&
  echo "INSTALL COMPLETE"
}


# override CFLAGS, CXXFLAGS, or other environment variables here
# as needed.
#
# If the package needs to be built from a directory other than
# the source directory, set BUILD_DIR appropriately (for example:
# 'export BUILD_DIR=../build-binutils')
#
# You may copy a source tarball into a "src" subdirectory, and
# put patches into a "patches" subdirectory, in which case the
# build script will unpack and patch the source for you.
# Alternatively, you can prepare the source yourself (and cd into
# the source directory) before running build.
#
# If necessary, redefine the build functions:
#   configure_commands, make_commands, test_commands, install_commands
#
# If this package has external dependencies, such as requiring
# special users or groups to exist, verify that the dependencies
# are met in initial_checkup (echo problem notifications and exit
# if they are not).
#
# Look at ~/.bash_profile for syntax help.  Re-source the options
# file afterward!
#
# Run "declare -f" to find out the current function definitions.
#
